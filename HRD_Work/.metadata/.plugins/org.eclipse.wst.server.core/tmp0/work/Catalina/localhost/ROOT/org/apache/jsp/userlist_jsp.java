/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.72
 * Generated at: 2022-11-10 06:16:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.SimpleDateFormat;
import member.MemberVO;
import java.util.ArrayList;
import member.MemberDAO;
import member.MemberVO;

public final class userlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/./header.jsp", Long.valueOf(1666263840000L));
    _jspx_dependants.put("/./footer.jsp", Long.valueOf(1666263612000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.MemberVO");
    _jspx_imports_classes.add("member.MemberDAO");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("	* {\r\n");
      out.write("		margin: 0;\r\n");
      out.write("		padding: 0;\r\n");
      out.write("		text-decoration: none;\r\n");
      out.write("	}\r\n");
      out.write("	header {\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		height: 70px;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("		background-color: #000;\r\n");
      out.write("		color: #fff;\r\n");
      out.write("		display: flex;\r\n");
      out.write("		justify-content: center;\r\n");
      out.write("		align-items: center;\r\n");
      out.write("	}\r\n");
      out.write("	nav {\r\n");
      out.write("		padding-left: 20px;\r\n");
      out.write("		height: 50px;\r\n");
      out.write("		display: flex;\r\n");
      out.write("		align-items: center;\r\n");
      out.write("		background-color: #333;\r\n");
      out.write("	}	\r\n");
      out.write("	nav a {\r\n");
      out.write("		margin-right: 20px;\r\n");
      out.write("		color: #fff;\r\n");
      out.write("	}	\r\n");
      out.write("	\r\n");
      out.write("	footer {\r\n");
      out.write("		height: 50px;\r\n");
      out.write("		display: flex;\r\n");
      out.write("		justify-content: center;\r\n");
      out.write("		align-items: center;\r\n");
      out.write("		background-color: #333;\r\n");
      out.write("		color: #fff;\r\n");
      out.write("	}	\r\n");
      out.write("	\r\n");
      out.write("	section {\r\n");
      out.write("		padding: 30px 0;\r\n");
      out.write("		height: 620px;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("		display: flex;\r\n");
      out.write("		flex-direction: column;\r\n");
      out.write("		align-items: center;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	section > h2 {\r\n");
      out.write("		padding-bottom: 20px;\r\n");
      out.write("	}	\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		<h2>쇼핑몰 회원관리 ver1.0</h2>\r\n");
      out.write("	</header>\r\n");
      out.write("	\r\n");
      out.write("	<nav>\r\n");
      out.write("		<a href=\"#\">회원등록</a>\r\n");
      out.write("		<a href=\"#\">회원목록조회/수정</a>\r\n");
      out.write("		<a href=\"#\">회원매출조회</a>\r\n");
      out.write("		<a href=\"#\">홈으로</a>\r\n");
      out.write("	</nav>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	");

		MemberDAO dao = new MemberDAO();
		ArrayList<MemberVO> list = dao.selectMembers();
	
      out.write("\r\n");
      out.write("		<h2>회원목록조회</h2>\r\n");
      out.write("		<table border=\"1px\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>회원번호</th>\r\n");
      out.write("				<th>회원성명</th>\r\n");
      out.write("				<th>전화번호</th>\r\n");
      out.write("				<th>주소</th>\r\n");
      out.write("				<th>가입일자</th>\r\n");
      out.write("				<th>고객등급</th>\r\n");
      out.write("				<th>거주지역</th>\r\n");
      out.write("			</tr>\r\n");
      out.write("			");

				for(MemberVO vo : list){
					String grade = "";
					String city = "";
					switch(vo.getGrade()) {
					case "A" : grade = "VIP"; break;
					case "B" : grade = "일반"; break;
					case "C" : grade = "직원"; break;
					}
					switch(vo.getCity()) {
					case "01" : city = "서울"; break;
					case "10" : city = "인천"; break;
					case "20" : city = "성남"; break;
					case "30" : city = "대전"; break;
					case "40" : city = "광주"; break;
					case "60" : city = "부산"; break;
					}
					SimpleDateFormat format = new SimpleDateFormat("YYYY년MM월DD일");
					String date = format.format(vo.getJoindate());
					
			
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><a href=\"/update.jsp?custno=");
      out.print( vo.getCustno());
      out.write('"');
      out.write('>');
      out.print( vo.getCustno() );
      out.write("</a></td>\r\n");
      out.write("				<td><a>");
      out.print( vo.getCustname() );
      out.write("</a></td>\r\n");
      out.write("				<td><a>");
      out.print( vo.getPhone() );
      out.write("</a></td>\r\n");
      out.write("				<td><a>");
      out.print( vo.getAddress() );
      out.write("</a></td>\r\n");
      out.write("				<td><a>");
      out.print( date );
      out.write("</a></td>\r\n");
      out.write("				<td><a>");
      out.print( grade );
      out.write("</a></td>\r\n");
      out.write("				<td><a>");
      out.print( city );
      out.write("</a></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		");

				}
		
      out.write("\r\n");
      out.write("		</table>\r\n");
      out.write("	\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<footer>\r\n");
      out.write("		HRDKOREA Copyright &copy; 2016 All rights Human Resources Development Service of Korea.\r\n");
      out.write("	</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
